#!/usr/bin/perl 
use warnings;
use strict;

$ENV{'PROPHET_REPLICA_TYPE'} ||= 'prophet';
$ENV{'PROPHET_REPO'} = $ENV{'SD_REPO'} || $ENV{'HOME'}.'/.svb';

use Prophet::CLI;
my $cli = Prophet::CLI->new( { app_class => 'App::SD' } );
$cli->run_one_command;




package App::SD::CLI::Command;
use base qw/Prophet::CLI::Command/;



package App::SD::CLI::Command::Help;
use base qw/App::SD::CLI::Command/;

sub run {

print <<EOF

$0 ticket create --summary "This is a summary" --status new --somekey value
$0 ticket update --uuid <uuid> --status resolved
$0 ticket search --regex .
$0 ticket delete --uuid <uuid>
$0 ticket show --uuid <uuid>
$0 pull remote-url

$0 help  
    Show this file

EOF

}


package App::SD::CLI::Command::Details;
use base qw/App::SD::CLI::Command/;
sub run {
    App::SD::Command::Ticket::Show->run();
    App::SD::Command::Comments->run();
}

package App::SD::CLI::Command::Comments;
use base qw/App::SD::CLI::Command/;
sub run {
    my $self = shift;
    my ($ticket) = $self->args->{'uuid'};
    my $record = App::SD::Model::Ticket->new( { handle => $self->app_handle->handle } );
    $record->load( uuid => $ticket );
    print "id: " . $record->uuid . "\n";
    unless (@{$record->comments}) {
        print "No comments found\n";
    }

    for (@{$record->comments}) {
        print "comment id: ".$_->uuid."\n";
        print "Content:\n".$_->prop('content');
        print "\n\n";
    }

}


package App::SD::CLI::Command::Merge;
use base qw/App::SD::CLI::Command Prophet::CLI::Command::Merge/;

package App::SD::CLI::Command::Push;
use base qw/App::SD::CLI::Command::Merge/;

sub run {
    my $self = shift; 
    local $ENV{PROPHET_RESOLVER} = 'Prompt';
    bless $self, 'App::SD::CLI::Command::Merge';
    $self->args( {to => $self->args->{'to'}, from => $ENV{'PROPHET_REPLICA_TYPE'}.":file://".$self->app_handle->handle->fs_root });
    $self->run; 
}

package App::SD::CLI::Command::Pull;
use base qw/App::SD::CLI::Command::Merge/;

sub run {
    my $self = shift; 
    local $ENV{PROPHET_RESOLVER} = 'Prompt';
    bless $self, 'App::SD::CLI::Command::Merge';
    $self->args({  from => $self->args->{'from'}, 
                   to => $ENV{'PROPHET_REPLICA_TYPE'}.":file://".$cli->app_handle->handle->fs_root });
    $self->run; 
}

